stages:
#   - sonarqube
  - docker-dev
  - deploy-dev
  - deploy-test
  - docker-prd
  - deploy-prd

variables:
  MC_Service_Name: masa-mc-service
  MC_Web_Name: masa-mc-ui-admin

  IMAGE_MC_SERVICE:  $CI_ALI_REGISTRY_DOMAIN/masa/$MC_Service_Name:$CI_PIPELINE_ID
  IMAGE_MC_WEB_ADMIN_SERVER:  $CI_ALI_REGISTRY_DOMAIN/masa/$MC_Web_Name:$CI_PIPELINE_ID

  IOT_IMAGE_MC_SERVICE:  $CI_ALI_REGISTRY_DOMAIN/masa/$MC_Service_Name:$CI_COMMIT_TAG
  IOT_IMAGE_MC_WEB_ADMIN_SERVER:  $CI_ALI_REGISTRY_DOMAIN/masa/$MC_Web_Name:$CI_COMMIT_TAG

  IMAGE_MC_SERVICE_DEV:  $CI_ALI_REGISTRY_DOMAIN/masa/$MC_Service_Name:dev-$CI_PIPELINE_ID
  IMAGE_MC_WEB_ADMIN_SERVER_DEV:  $CI_ALI_REGISTRY_DOMAIN/masa/$MC_Web_Name:dev-$CI_PIPELINE_ID

  WebDomain_test: mc-staging.masastack.com
  ServiceDomain_test: mc-service-staging.masastack.com

  WebDomain_dev: mc-develop.masastack.com
  ServiceDomain_dev: mc-service-develop.masastack.com

  WebDomain_prd: mc.masastack.com
  ServiceDomain_prd: mc-service.masastack.com

  IOT_WebDomain_prd: mc.lonsid.cn
  IOT_ServiceDomain_prd: mc-service.lonsid.cn
  
  DOCKER_MC_SERVICE_PATH: ./src/Services/Masa.Mc.Service/Dockerfile
  DOCKER_MC_ADMIN_WEB_PATH: ./src/Web/Masa.Mc.Web.Admin.Server/Dockerfile
  NAMESPACE_DEV: masa-mc-dev
  NAMESPACE_TEST: masa-mc-test
  NAMESPACE_STAGING: masa-mc-staging
  NAMESPACE_PRD: masa-mc
  IOT_NAMESPACE_PRD: loncloud

docker-dev:
  stage: docker-dev
  tags:
    - linux-shell
  before_script:
    - echo $CI_ALI_REGISTRY_USER  $CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN
    - docker login --username=$CI_ALI_REGISTRY_USER --password=$CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN     
  only:
    - main  
  script:
    - docker build -f $DOCKER_MC_SERVICE_PATH -t $IMAGE_MC_SERVICE_DEV .
    - docker push $IMAGE_MC_SERVICE_DEV 
    - docker build -f $DOCKER_MC_ADMIN_WEB_PATH -t $IMAGE_MC_WEB_ADMIN_SERVER_DEV .
    - docker push $IMAGE_MC_WEB_ADMIN_SERVER_DEV
  after_script:
    - docker rmi $IMAGE_MC_WEB_ADMIN_SERVER_DEV   
    - docker rmi $IMAGE_MC_SERVICE_DEV

deploy-dev:
  stage: deploy-dev
  image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
  variables:
    EnviromentPath: Develop
  tags:
    - ydy-runner
  only:
    - main  
  script:
    - ls
    - pwd 
    - echo $KUBE_CONFIG_DEV_YDY | base64 -d > ./config
    - cat ./config
    - helm version 
    - helm --kubeconfig ./config list   -n $NAMESPACE_DEV 
    - helm upgrade --install $MC_Service_Name ./charts/masa-service --set ingress.servertype=service --set domain.name=$ServiceDomain_dev  --set domain.secret=masastack  --set service.port=80  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_DEV
    - helm upgrade --install $MC_Web_Name ./charts/masa-service --set ingress.servertype=web  --set domain.name=$WebDomain_dev  --set domain.secret=masastack  --set service.port=443  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_DEV

deploy-test:
  stage: deploy-test
  image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
  variables:
    EnviromentPath: Staging
  tags:
    - ydy-runner
  only:
    - main  
  script:
    - ls
    - pwd 
    - echo $KUBE_CONFIG_DEV_YDY | base64 -d > ./config
    - cat ./config
    - helm version 
    - helm --kubeconfig ./config list   -n $NAMESPACE_TEST
    - helm upgrade --install $MC_Service_Name ./charts/masa-service  --set ingress.servertype=service --set domain.name=$ServiceDomain_test  --set domain.secret=masastack  --set service.port=80  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_STAGING
    - helm upgrade --install $MC_Web_Name ./charts/masa-service --set ingress.servertype=web  --set domain.name=$WebDomain_test  --set domain.secret=masastack  --set service.port=443  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_STAGING

# docker-build-prd:
#   stage: docker-prd
#   tags:
#     - linux-shell
#   before_script:
#     - echo $CI_ALI_REGISTRY_USER  $CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN
#     - docker login --username=$CI_ALI_REGISTRY_USER --password=$CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN     
#   only:
#     - main  
#   script:
#     - docker build -f $DOCKER_MC_SERVICE_PATH -t $IMAGE_MC_SERVICE .
#     - docker push $IMAGE_MC_SERVICE 
#     - docker build -f $DOCKER_MC_ADMIN_WEB_PATH -t $IMAGE_MC_WEB_ADMIN_SERVER .
#     - docker push $IMAGE_MC_WEB_ADMIN_SERVER
#   after_script:
#     - docker rmi $IMAGE_MC_WEB_ADMIN_SERVER
#     - docker rmi $IMAGE_MC_SERVICE

# deploy-prd:
#   stage: deploy-prd
#   image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
#   variables:
#     EnviromentPath: IOTProduction
#   tags:
#     - 51-132
#   only:
#     - main  
#   script:
#     - ls
#     - pwd 
#     - echo $KUBE_CONFIG_IOT | base64 -d > ./config
#     - cat ./config
#     - helm version 
#     - helm --kubeconfig ./config list   -n $NAMESPACE_PRD
#     - helm --kubeconfig ./config upgrade --install $MC_Service_Name ./charts/masa-service --set ingress.servertype=service --set domain.name=$ServiceDomain_prd  --set domain.secret=lonsid-cn  --set service.port=80  --set environment.path=$EnviromentPath --set image.tag=$CI_COMMIT_TAG -n $NAMESPACE_PRD
#     - helm --kubeconfig ./config upgrade --install $MC_Web_Name ./charts/masa-service --set ingress.servertype=web  --set domain.name=$WebDomain_prd  --set domain.secret=lonsid-cn  --set service.port=443  --set environment.path=$EnviromentPath --set image.tag=$CI_COMMIT_TAG -n $NAMESPACE_PRD
#   when: manual


docker-build-prd-iot:
  stage: docker-prd
  tags:
    - linux-shell
  before_script:
    - echo $CI_ALI_REGISTRY_USER  $CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN
    - docker login --username=$CI_ALI_REGISTRY_USER --password=$CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN     
  only:
    - tags  
  script:
    - docker build -f $DOCKER_MC_SERVICE_PATH -t $IOT_IMAGE_MC_SERVICE .
    - docker push $IOT_IMAGE_MC_SERVICE 
    - docker build -f $DOCKER_MC_ADMIN_WEB_PATH -t $IOT_IMAGE_MC_WEB_ADMIN_SERVER .
    - docker push $IOT_IMAGE_MC_WEB_ADMIN_SERVER
  after_script:
    - docker rmi $IOT_IMAGE_MC_WEB_ADMIN_SERVER
    - docker rmi $IOT_IMAGE_MC_SERVICE

deploy-prd-iot:
  stage: deploy-prd
  image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
  variables:
    EnviromentPath: Production
  tags:
    - 51-132
  only:
    - tags  
  script:
    - ls
    - pwd 
    - echo $KUBE_CONFIG_IOT  | base64 -d > ./config
    - cat ./config
    - helm version 
    - helm --kubeconfig ./config list   -n $NAMESPACE_PRD
    - helm --kubeconfig ./config upgrade --install $MC_Service_Name ./charts/masa-service --set ingress.servertype=service --set domain.name=$IOT_ServiceDomain_prd  --set domain.secret=lonsid-cn  --set service.port=80  --set environment.path=$EnviromentPath --set image.tag=$CI_COMMIT_TAG -n $IOT_NAMESPACE_PRD
    - helm --kubeconfig ./config upgrade --install $MC_Web_Name ./charts/masa-service --set ingress.servertype=web  --set domain.name=$IOT_WebDomain_prd  --set domain.secret=lonsid-cn  --set service.port=443  --set environment.path=$EnviromentPath --set image.tag=$CI_COMMIT_TAG -n $IOT_NAMESPACE_PRD
  when: manual

# include: 'devops/**/*.yml'

# stages:
#   - sornarqube
#   - build-docker-image-dev
#   - deploy-dev
#   - deploy-test
#   - deploy-staging
#   - build-docker-image-prd
#   - deploy-prd
#   - rollout-dev
#   - rollout-test
#   - rollout-staging
#   - rollout-prd
# variables: 
#   PRD_REPLICAS: 2

#   DEV_REPLICAS: 1

#   REGISTRY_URL: registry.cn-hangzhou.aliyuncs.com
#   # HARBOR_URL: reg.lonsid.cn
#   REGISTRY_WAREHOUSE: masa

#   K8S_IMAGEPULLSECRETSPULL: aliregistry
#   SECRET_TLS: lonsid-cn

