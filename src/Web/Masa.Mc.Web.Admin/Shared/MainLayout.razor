@using Microsoft.AspNetCore.Components.Rendering
@inherits LayoutComponentBase
@inject GlobalConfig GlobalConfig
@inject IPopupService PopupService
@inject I18n I18n
@implements IDisposable
<div class="main-layout">
    <MApp Class="masa" ConfirmParameters="@(param => { param.OkText = I18n.T("Ok");param.CancelText = I18n.T("Cancel"); })">
        <MAppBar Elevation=0 App MaxHeight=60 Class="mx-6 rounded-b-4 fill-background pa-0 app-bar">
            <DefaultSearch />
            <MSpacer />
            <Favorite />
            <Language />
            <HeaderRight />
        </MAppBar>

        <Navigation />

        <MMain Class="fill-lighten-1" Style="padding-top:60px">
            <MErrorHandler OnErrorHandleAsync="CustomErrorHandleAsync">
                <div class="pa-6 max-width full-height">
                    @Body
                </div>
            </MErrorHandler>
            <MLoading />
            <MConfirmDialog />
        </MMain>
    </MApp>
</div>
@code {
    protected override void OnInitialized()
    {
        GlobalConfig.OnPageModeChanged += base.StateHasChanged;
    }

    private async Task CustomErrorHandleAsync(Exception exception)
    {
        GlobalConfig.Loading = false;
        await PopupService.ToastErrorAsync(exception.Message);
    }

    public void Dispose()
    {
        GlobalConfig.OnPageModeChanged -= base.StateHasChanged;
    }
}