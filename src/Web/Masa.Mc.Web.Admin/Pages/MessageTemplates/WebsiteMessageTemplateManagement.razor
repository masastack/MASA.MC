@inherits AdminCompontentBase
@page "/messageTemplates/websiteMessageTemplateManagement"

<PageTitle>@T("WebsiteMessage")</PageTitle>

<MCard>
    <MCardTitle class="mx-2 pt-6">
        <MTextField @bind-Value="_queryParam.Filter" Clearable Color="primary" Class="rounded-2 search" Placeholder="@T("Search")" HideDetails="@("auto")" Flat Dense Solo BackgroundColor="fill-lighten-1" OnKeyDown="SearchKeyDown" OnClearClick="HandleClearAsync">
            <PrependInnerContent>
                <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
            </PrependInnerContent>
        </MTextField>
        <div @onclick="ToggleAdvanced" class="ml-4 d-flex button">
            <MIcon Class="ma-auto" Color="neutral-lighten-1" Size=20>
                @(advanced?"mdi-filter":"mdi-filter-off")
            </MIcon>
        </div>
        <MButton Color="primary" Class="ml-4 medium-button" OnClick="()=> _createModal.OpenModalAsync(ChannelTypes.WebsiteMessage)">
            <MIcon Size=18>mdi-plus</MIcon>
            <span class="ml-2">@T("Permission.Create")</span>
        </MButton>
    </MCardTitle>
    @if (advanced)
    {
        <MRow Class="mx-2">
            <MCol Cols="2">
                <DateRangePicker @bind-StartTime="_queryParam.StartTime" @bind-EndTime="_queryParam.EndTime" OnChange="RefreshAsync" />
            </MCol>
            <MCol Cols="2">
                <MSelect Value="_queryParam.ChannelId"
                     Items="@_channelItems"
                     Label="@T("DisplayName.Channel")"
                     ItemText="item => item.DisplayName"
                     ItemValue="item => item.Id"
                     Dense
                     Outlined
                     Clearable
                     HideDetails="@("auto")"
                     TItem="ChannelDto"
                     TItemValue="Guid"
                     TValue="Guid?"
                     ValueChanged="async (val)=>{_queryParam.ChannelId=val;await RefreshAsync();}">
                </MSelect>
            </MCol>
        </MRow>
    }
    <MCardText>
        <MDataTable Headers="Headers" Items="_entities.Result" TItem="MessageTemplateDto" ItemsPerPage="_queryParam.PageSize" HideDefaultFooter Class="user">
            <HeaderColContent Context="header">
                <span class="text-btn">@header.Text</span>
            </HeaderColContent>
            <ItemColContent>
                @switch (context.Header.Value)
                {
                    case ("ChannelDisplayName"):
                        <span class="text-body3">@context.Item.Channel?.DisplayName</span>
                        break;
                    case (nameof(MessageTemplateDto.ModificationTime)):
                        <span class="text-body3">@context.Item.ModificationTime.ToString(T("$DateTimeFormat"))</span>
                        break;
                    case nameof(MessageTemplateDto.AuditStatus):
                        string color = string.Empty;
                        switch (context.Item.AuditStatus)
                        {
                            case MessageTemplateAuditStatuses.WaitAudit:
                                color = "orange";
                                break;
                            case MessageTemplateAuditStatuses.Adopt:
                                color = "sample-green";
                                break;
                            case MessageTemplateAuditStatuses.Fail:
                                color = "error";
                                break;
                            default:
                                break;
                        }
                        <MChip Color="@($"{color}-lighten-5")" TextColor="@color" Ripple="false">
                            <span>@T($"DisplayName.MessageTemplateAuditStatus.{context.Item.AuditStatus.ToString()}")</span>
                        </MChip>
                        break;
                    case nameof(MessageTemplateDto.Status):
                        <MChip Ripple="false">
                            <span>@T($"DisplayName.MessageTemplateStatus.{context.Item.Status.ToString()}")</span>
                        </MChip>
                        break;
                    case "Action":
                        <MIcon Small Color="neutral-lighten-2" OnClick="async()=>await _editModal.OpenModalAsync(context.Item)">mdi-pencil</MIcon>
                        break;
                    default:
                        <span class="text-body3">@context.Value</span>
                        break;
                }
            </ItemColContent>
            <FooterContent>
                <Pagination Class="mt-5" @bind-Page="_queryParam.Page" @bind-PageSize="_queryParam.PageSize" Total="_entities.Total" OnChange="HandlePaginationChange" />
            </FooterContent>
        </MDataTable>
    </MCardText>
</MCard>

<WebsiteMessageTemplateCreateModal @ref="_createModal" OnOk="HandleOk" />
<WebsiteMessageTemplateEditModal @ref="_editModal" OnOk="HandleOk" />

