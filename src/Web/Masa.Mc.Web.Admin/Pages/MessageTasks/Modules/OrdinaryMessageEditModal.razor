@inherits AdminCompontentBase
<div @ref="Ref">
    <SSimpleModal Value="@_visible" ValueChanged="HandleVisibleChanged" Class="full-height" HeaderClass="mr-4" Title="@T("Permission.EditOrdinaryMessage")" OnDelete="HandleReceiverBack" OnCancel="HandleCancel" OnSave="HandleSaveAsync">
        <ChildContent>
            <MForm Model="_model" EnableValidation EnableI18n @ref="_form" Class="full-height mt-n2 pt-3">
                <MStepper Value="_model.Step" Elevation=0 Class="d-flex flex-column full-height">
                    <MStepperHeader Class="ma-n6" Style="box-shadow:none !important">
                        <MStepperStep Step="1" Complete="_model.Step>1">
                            @T("DisplayName.MessageInfoContent")
                        </MStepperStep>
                        <MDivider></MDivider>
                        <MStepperStep Step="2" Complete="_model.Step>2">
                            @T("DisplayName.MessageTaskReceiver")
                        </MStepperStep>
                        <MDivider></MDivider>
                        <MStepperStep Step="3">
                            @T("DisplayName.MessageTaskSendingRule")
                        </MStepperStep>
                    </MStepperHeader>
                    <MStepperItems Class="flex-grow-1">
                        <MStepperContent Class="full-height pa-0" Step="1">
                            <AutoHeight Overflow>
                                <AutoHeightContent>
                                    <MRow Class="mt-6">
                                        <MCol>
                                            <SSelect @bind-Value="@_model.ChannelType"
                                                     Items="@(GetEnumList<ChannelTypes>().Where(x=>x!=ChannelTypes.Sms).ToList())"
                                                     Label="@T("DisplayName.ChannelType")"
                                                     ItemText="item => T(item.ToString())"
                                                     ItemValue="item => item"
                                                     TItem="ChannelTypes"
                                                     TItemValue="ChannelTypes"
                                                     TValue="ChannelTypes?"
                                                     OnSelectedItemUpdate="HandleChannelTypeChangeAsync">
                                            </SSelect>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-6">
                                        <MCol>
                                            <SSelect @bind-Value="_model.ChannelId"
                                                     Items="@_channelItems"
                                                     Label="@T("DisplayName.Channel")"
                                                     ItemText="item => item.DisplayName"
                                                     ItemValue="item => item.Id">
                                            </SSelect>
                                        </MCol>
                                    </MRow>
                                    @if (_model.ChannelType == ChannelTypes.App)
                                    {
                                        <MRow>
                                            <MCol Class="d-flex">
                                                <SCheckbox Value="true" Disabled Label="@T("NotificationMessage")"></SCheckbox>
                                                <SCheckbox @bind-Value="_model.ExtraProperties.IsWebsiteMessage" Class="ml-6" Label="@T("InAppMessages")" Tooltip="@T("InAppMessagesTips")"></SCheckbox>
                                            </MCol>
                                        </MRow>
                                    }
                                    @if (_model.ChannelType != ChannelTypes.Sms)
                                    {
                                        <MRow Class="mt-6">
                                            <MCol>
                                                <STextField @bind-Value="_model.MessageInfo.Title"
                                                        Label="@T("DisplayName.MessageInfoTitle")">
                                                </STextField>
                                            </MCol>
                                        </MRow>
                                    }
                                    <MRow Class="mt-6">
                                        <MCol>
                                            @if (_model.ChannelType != ChannelTypes.App)
                                            {
                                                <DefaultMarkdown @bind-Html="_model.MessageInfo.Content" @bind-Value="_model.MessageInfo.Markdown"></DefaultMarkdown>
                                                <MInput @bind-Value="_model.MessageInfo.Content" />
                                            }
                                            else
                                            {
                                                <STextarea @bind-Value="_model.MessageInfo.Content"
                                                       Label="@T("DisplayName.MessageInfoContent")">
                                                </STextarea>
                                            }
                                        </MCol>
                                    </MRow>
                                    @if (ComputedJumpUrlShow)
                                    {
                                        <MRow Class="mt-6">
                                            <MCol>
                                                <STextField @bind-Value="_model.MessageInfo.JumpUrl"
                                                        Label="@T("DisplayName.MessageTemplateJumpUrl")" Tooltip="@T("JumpUrlTips")">
                                                    <PrependContent>
                                                        <MCheckbox Class="mt-0" @bind-Value="_model.MessageInfo.IsJump"></MCheckbox>
                                                    </PrependContent>
                                                </STextField>
                                            </MCol>
                                        </MRow>
                                    }
                                    @if (_model.ChannelType == ChannelTypes.Sms)
                                    {
                                        <MRow Class="mt-6">
                                            <MCol>
                                                <STextField @bind-Value="_model.Sign"
                                                        Label="@T("DisplayName.MessageTemplateSign")">
                                                </STextField>
                                            </MCol>
                                        </MRow>
                                    }
                                    @if (_model.ChannelType == ChannelTypes.App)
                                    {
                                        <ExtraProperties @bind-Value="_model.MessageInfo.ExtraProperties"></ExtraProperties>
                                        <MExpansionPanels Accordion Flat>
                                        <MExpansionPanel>
                                            <MExpansionPanelHeader Context="PanelHeader" Class="pa-0">
                                                <DefaultSubTitle Class="">@T("OptionalConfiguration")</DefaultSubTitle>
                                            </MExpansionPanelHeader>
                                            <MExpansionPanelContent Class="pa-0">
                                                <DefaultSubTitle Class="mb-6">Android</DefaultSubTitle>
                                                <STextField @bind-Value="_model.ExtraProperties.IntentUrl"
                                                            Label="@T("IntentUrl")">
                                                    <AppendOuterContent>
                                                        <MenuTooltip Class="ml-2" Tooltip="@T("IntentUrlTips")" />
                                                    </AppendOuterContent>
                                                </STextField>
                                            </MExpansionPanelContent>
                                        </MExpansionPanel>
                                    </MExpansionPanels>
                                    }
                                </AutoHeightContent>
                            </AutoHeight>
                        </MStepperContent>
                        <MStepperContent Class="full-height pa-0" Step="2">
                            <AutoHeight Overflow>
                                <AutoHeightContent>
                                    @if ((_model.ChannelType == ChannelTypes.WebsiteMessage || _model.ChannelType == ChannelTypes.App) && !_selectReceiverType)
                                    {
                                        <ReceiverTypeSelect @bind-value="_model.ReceiverType" OnClick="HandleReceiverType" />
                                    }
                                    else
                                    {
                                        <MInput @bind-Value="_model.Receivers" />
                                        <MessageReceivers @bind-ReceiverType="_model.ReceiverType"
                                                      @bind-SelectReceivers="_selectReceivers"
                                                      @bind-ImportReceivers="_importReceivers"
                                                      @bind-SelectReceiverType="_model.SelectReceiverType"
                                                      ChannelType="_model.ChannelType" />
                                    }
                                </AutoHeightContent>
                            </AutoHeight>
                        </MStepperContent>
                        <MStepperContent Class="full-height pa-0" Step="3">
                            <MInput @bind-Value="_model.SendRules" />
                            <MessageSendingRules Class="mt-2" @bind-Value="_model.SendRules" />
                        </MStepperContent>
                    </MStepperItems>
                </MStepper>
            </MForm>
        </ChildContent>
        <DeleteContent Context="delete">
            @if (_model.Step == 2)
            {
                <MButton Icon OnClick="HandleReceiverBack">
                    <SIcon Size="24" Color="emphasis2">mdi-keyboard-backspace</SIcon>
                </MButton>
            }
            else if (_model.Step == 3)
            {
                <MButton Icon OnClick="HandleSendingRuleBack">
                    <SIcon Size="24" Color="emphasis2">mdi-keyboard-backspace</SIcon>
                </MButton>
            }
        </DeleteContent>
        <SaveContent Context="save">
            @if (_model.Step == 1)
            {
                <SButton Color="fill" BorderRadiusClass="btn-form" Class="btn-fill-line emphasis2--text" OnClick="async() => await Throttle(HandleSaveAsync)">@T("Save")</SButton>
                <SButton BorderRadiusClass="btn-form" Class="ml-6" OnClick="()=> HandleNextStep()">@T("NextStep")</SButton>
            }
            @if (_model.Step == 2 && (_model.ChannelType != ChannelTypes.WebsiteMessage || _selectReceiverType))
            {
                <SButton Color="fill" BorderRadiusClass="btn-form" Class="btn-fill-line emphasis2--text" OnClick="async() => await Throttle(HandleSaveAsync)">@T("Save")</SButton>
                <SButton BorderRadiusClass="btn-form" Class="ml-6" OnClick="()=> HandleNextStep()">@T("NextStep")</SButton>
            }
            @if (_model.Step == 3)
            {
                <SButton Color="fill" BorderRadiusClass="btn-form" Class="btn-fill-line emphasis2--text" OnClick="async() => await Throttle(HandleSaveAsync)">@T("Save")</SButton>
                <SButton BorderRadiusClass="btn-form" Class="ml-6" OnClick="async() => await Throttle(HandleSendAsync)">@T("SaveSend")</SButton>
            }
        </SaveContent>
    </SSimpleModal>
</div>