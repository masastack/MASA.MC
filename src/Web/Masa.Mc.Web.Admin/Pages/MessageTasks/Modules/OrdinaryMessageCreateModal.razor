@inherits AdminCompontentBase
<div @ref="Ref">
    <McModal Value="@_visible" ValueChanged="HandleVisibleChanged" Title="@T("Permission.SendOrdinaryMessage")">
        <MForm Model="_model" @ref="_form" EnableValidation Class="full-height">
            <ElevationTab TabMinWidth="227" Class="mt-10" Tabs='new List<string> { "收件人", "消息内容", "发送规则" }' Dense>
                <ElevationTabItem>
                    <MContainer Fluid Class="pt-9 px-5">
                        <MRow Align="AlignTypes.Center" Justify="JustifyTypes.SpaceBetween">
                           
                                <MHover Context="hoverContext">
                                    <MCard @attributes="hoverContext.Attrs" Height="331" Width="331" Class="@($"d-flex flex-column justify-center align-center {hoverContext.Class} {(hoverContext.Hover ? "primary" : "fill-background")}")"
                                           Elevation="@(hoverContext.Hover ? 12 : 2)">
                                        @if (hoverContext.Hover)
                                        {
                                            <MIcon Size=33 Color="#FFFFFF">mdi-phone-outline</MIcon>
                                            <div class="h6 pt-10" style="color:#FAFAFA">@T("Sms")</div>
                                        }
                                        else
                                        {
                                            <MIcon Size=33 Color="#323D6F">mdi-phone</MIcon>
                                            <div class="h6 pt-10 regular--text">@T("Sms")</div>
                                        }
                                    </MCard>
                                </MHover>
                            
                                <MHover Context="hoverContext">
                                    <MCard @attributes="hoverContext.Attrs" Height="331" Width="331" Class="@($"d-flex flex-column justify-center align-center {hoverContext.Class} {(hoverContext.Hover ? "primary" : "fill-background")}")"
                                           Elevation="@(hoverContext.Hover ? 12 : 2)">
                                        @if (hoverContext.Hover)
                                        {
                                            <MIcon Size=33 Color="#FFFFFF">mdi-email-outline</MIcon>
                                            <div class="h6 pt-10" style="color:#FAFAFA">@T("Email")</div>
                                        }
                                        else
                                        {
                                            <MIcon Size=33 Color="#323D6F">mdi-email</MIcon>
                                            <div class="h6 pt-10 regular--text">@T("Email")</div>
                                        }
                                    </MCard>
                                </MHover>
                            
                        </MRow>
                    </MContainer>
                </ElevationTabItem>
                <ElevationTabItem>
                    Api Permission
                </ElevationTabItem>
            </ElevationTab>
            <div class="full-height flex-column">
                <div class="flex-height-auto flex-grow-1">
                    <MRow>
                        <MCol>
                            <MRow>
                                <MCol>
                                    <MSelect @bind-Value="@_channelType"
                                             Items="@(GetEnumList<ChannelTypes>().Where(x=>x!=ChannelTypes.Sms).ToList())"
                                             Label="@T("DisplayName.ChannelType")"
                                             ItemText="item => T(item.ToString())"
                                             ItemValue="item => item"
                                             Outlined
                                             HideDetails="@("auto")"
                                             TItem="ChannelTypes"
                                             TItemValue="ChannelTypes"
                                             TValue="ChannelTypes"
                                             OnSelectedItemUpdate="HandleChannelTypeChangeAsync">
                                    </MSelect>
                                </MCol>
                            </MRow>
                            <MRow>
                                <MCol>
                                    <MSelect @bind-Value="_model.ChannelId"
                                             Items="@_channelItems"
                                             Label="@T("DisplayName.Channel")"
                                             ItemText="item => item.DisplayName"
                                             ItemValue="item => item.Id"
                                             Outlined
                                             HideDetails="@("auto")">
                                    </MSelect>
                                </MCol>
                            </MRow>
                            @if (_channelType != ChannelTypes.Sms)
                            {
                                <MRow>
                                    <MCol>
                                        <MTextField @bind-Value="_model.MessageInfo.Title"
                                                Label="@T("DisplayName.MessageInfoTitle")"
                                                Outlined
                                                HideDetails="@("auto")">
                                        </MTextField>
                                    </MCol>
                                </MRow>
                            }
                            <MRow>
                                <MCol>
                                    <DefaultMarkdown @bind-Html="_model.MessageInfo.Content" @bind-Value="_model.MessageInfo.Markdown"></DefaultMarkdown>
                                    <MInput @bind-Value="_model.MessageInfo.Content" />
                                </MCol>
                            </MRow>
                            @if (_channelType == ChannelTypes.WebsiteMessage)
                            {
                                <MRow Class="mx-1 pt-6">
                                    <MCheckbox Class="mt-1 mr-2" @bind-Value="_model.MessageInfo.IsJump" Label="@T("DisplayName.MessageTemplateIsJump")"></MCheckbox>
                                    <MTextField @bind-Value="_model.MessageInfo.JumpUrl"
                                            Label="@T("DisplayName.MessageTemplateJumpUrl")"
                                            Outlined
                                            HideDetails="@("auto")">
                                    </MTextField>
                                </MRow>
                            }
                            @if (_channelType == ChannelTypes.Sms)
                            {
                                <MRow>
                                    <MCol>
                                        <MTextField @bind-Value="_model.Sign"
                                                Label="@T("DisplayName.MessageTemplateSign")"
                                                Outlined
                                                HideDetails="@("auto")">
                                        </MTextField>
                                    </MCol>
                                </MRow>
                            }
                        </MCol>
                        <MCol>
                            <MInput @bind-Value="_model.Receivers" />
                            <MessageReceivers @bind-ReceiverType="_model.ReceiverType"
                                              @bind-SelectReceivers="_selectReceivers"
                                              @bind-ImportReceivers="_importReceivers"
                                              @bind-SelectReceiverType="_model.SelectReceiverType"
                                              ChannelType="_channelType" />
                            <div class="mt-4 text-subtitle2">@T("DisplayName.MessageTaskSendingRule")</div>
                            <MInput @bind-Value="_model.SendRules" />
                            <MessageSendingRules Class="mt-2" @bind-Value="_model.SendRules" />
                        </MCol>
                    </MRow>
                </div>
                <div Class="d-flex pt-6">
                    <MButton Class="mr-6" Text Color="error">@T("Delete")</MButton>
                    <MSpacer></MSpacer>
                    <MButton Rounded Outlined Color="indigo" Class="ml-6 medium-button px-6" OnClick="async() => await HandleOkAsync(true)">
                        <span>@T("Save")</span>
                    </MButton>
                    <MButton Color="primary" Class="small-button ml-6" OnClick="async() => await HandleOkAsync(false)">@T("SaveSend")</MButton>
                </div>
            </div>
        </MForm>
    </McModal>
</div>