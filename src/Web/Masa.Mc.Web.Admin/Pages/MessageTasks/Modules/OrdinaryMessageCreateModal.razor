@inherits AdminCompontentBase
<div @ref="Ref">
    <McModal Value="@_visible" ValueChanged="HandleVisibleChanged" Title="@T("Permission.SendOrdinaryMessage")" Height="936">
        <MForm Model="_model" @ref="_form" EnableValidation Class="full-height">
            <ElevationTab TabIndex="_tabIndex" TabMinWidth="227" Class="mt-10 full-height" ItemsClass="full-height" Tabs='new List<string> { "收件人", "消息内容", "发送规则" }' Dense>
                <ElevationTabItem>
                    @if (_model.ReceiverType == ReceiverTypes.Assign)
                    {
                        <MInput @bind-Value="_model.Receivers" />
                        <MessageReceivers @bind-ReceiverType="_model.ReceiverType"
                                      @bind-SelectReceivers="_selectReceivers"
                                      @bind-ImportReceivers="_importReceivers"
                                      @bind-SelectReceiverType="_model.SelectReceiverType"
                                      ChannelType="_channelType" />
                    }
                    else
                    {
                        <MContainer Fluid Class="pt-9 px-1 full-height">
                            <MRow Align="AlignTypes.Center" Justify="JustifyTypes.SpaceBetween">
                                <MCol>
                                    <MHover Context="hoverContext">
                                        <MCard @attributes="hoverContext.Attrs" Height="320" Width="320" Class="@($"d-flex flex-column justify-center align-center {hoverContext.Class} {(hoverContext.Hover ? "primary" : "fill-background")}")"
                                           Elevation="@(hoverContext.Hover ? 12 : 2)"
                                           OnClick="()=>HandleReceiverType(ReceiverTypes.Assign)">
                                            @if (hoverContext.Hover)
                                            {
                                                <MIcon Size=40 Color="#FFFFFF">mdi-account-supervisor-circle-outline</MIcon>
                                                <div class="h6 pt-10" style="color:#FAFAFA">@T("DisplayName.ReceiverType.Assign")</div>
                                            }
                                            else
                                            {
                                                <MIcon Size=40 Color="#323D6F">mdi-account-supervisor-circle</MIcon>
                                                <div class="h6 pt-10 regular--text">@T("DisplayName.ReceiverType.Assign")</div>
                                            }
                                        </MCard>
                                    </MHover>
                                </MCol>
                                <MCol>
                                    <MHover Context="hoverContext">
                                        <MCard @attributes="hoverContext.Attrs" Height="320" Width="320" Class="@($"d-flex flex-column justify-center align-center {hoverContext.Class} {(hoverContext.Hover ? "primary" : "fill-background")}")"
                                           Elevation="@(hoverContext.Hover ? 12 : 2)"
                                           OnClick="()=>HandleReceiverType(ReceiverTypes.Broadcast)">
                                            @if (hoverContext.Hover)
                                            {
                                                <MIcon Size=40 Color="#FFFFFF">mdi-email-outline</MIcon>
                                                <div class="h6 pt-10" style="color:#FAFAFA">@T("DisplayName.ReceiverType.Broadcast")</div>
                                            }
                                            else
                                            {
                                                <MIcon Size=40 Color="#323D6F">mdi-email</MIcon>
                                                <div class="h6 pt-10 regular--text">@T("DisplayName.ReceiverType.Broadcast")</div>
                                            }
                                        </MCard>
                                    </MHover>
                                </MCol>
                            </MRow>
                        </MContainer>
                    }
                </ElevationTabItem>
                <ElevationTabItem>
                    <div class="full-height flex-column">
                        <div class="flex-height-auto flex-grow-1">
                            <MRow Class="mt-6">
                                <MCol>
                                    <DefaultSelect @bind-Value="@_channelType"
                                                   Items="@(GetEnumList<ChannelTypes>().Where(x=>x!=ChannelTypes.Sms).ToList())"
                                                   Label="@T("DisplayName.ChannelType")"
                                                   ItemText="item => T(item.ToString())"
                                                   ItemValue="item => item"
                                                   TItem="ChannelTypes"
                                                   TItemValue="ChannelTypes"
                                                   TValue="ChannelTypes"
                                                   OnSelectedItemUpdate="HandleChannelTypeChangeAsync">
                                    </DefaultSelect>
                                </MCol>
                            </MRow>
                            <MRow Class="mt-6">
                                <MCol>
                                    <DefaultSelect @bind-Value="_model.ChannelId"
                                                   Items="@_channelItems"
                                                   Label="@T("DisplayName.Channel")"
                                                   ItemText="item => item.DisplayName"
                                                   ItemValue="item => item.Id">
                                    </DefaultSelect>
                                </MCol>
                            </MRow>
                            @if (_channelType != ChannelTypes.Sms)
                            {
                                <MRow Class="mt-6">
                                    <MCol>
                                        <DefaultTextField @bind-Value="_model.MessageInfo.Title"
                                                      Label="@T("DisplayName.MessageInfoTitle")">
                                        </DefaultTextField>
                                    </MCol>
                                </MRow>
                            }
                            <MRow Class="mt-6">
                                <MCol>
                                    <DefaultMarkdown @bind-Html="_model.MessageInfo.Content" @bind-Value="_model.MessageInfo.Markdown"></DefaultMarkdown>
                                    <MInput @bind-Value="_model.MessageInfo.Content" />
                                </MCol>
                            </MRow>
                            @if (_channelType == ChannelTypes.WebsiteMessage)
                            {
                                <MRow Class="mt-6">
                                    <MCol>
                                        <DefaultTextField @bind-Value="_model.MessageInfo.JumpUrl"
                                                      Label="@T("DisplayName.MessageTemplateJumpUrl")">
                                            <PrependContent>
                                                <MCheckbox Class="mt-0" @bind-Value="_model.MessageInfo.IsJump"></MCheckbox>
                                            </PrependContent>
                                        </DefaultTextField>
                                    </MCol>
                                </MRow>
                            }
                            @if (_channelType == ChannelTypes.Sms)
                            {
                                <MRow Class="mt-6">
                                    <MCol>
                                        <DefaultTextField @bind-Value="_model.Sign"
                                                      Label="@T("DisplayName.MessageTemplateSign")">
                                        </DefaultTextField>
                                    </MCol>
                                </MRow>
                            }
                        </div>
                        <div class="d-flex">
                            <MIcon Size="24" Color="emphasis2" OnClick="()=> _tabIndex-- ">mdi-keyboard-backspace</MIcon>
                            <MSpacer></MSpacer>
                            <MButton Color="fill" Class="btn-form" OnClick="async() => await HandleOkAsync(true)">@T("Save")</MButton>
                            <MButton Color="primary" Class="btn-form" OnClick="()=> _tabIndex++ ">@T("NextStep")</MButton>
                        </div>
                    </div>
                </ElevationTabItem>
                <ElevationTabItem>
                    <div class="full-height flex-column">
                        <div class="flex-height-auto flex-grow-1">
                            <div class="mt-4 text-subtitle2">@T("DisplayName.MessageTaskSendingRule")</div>
                            <MInput @bind-Value="_model.SendRules" />
                            <MessageSendingRules Class="mt-2" @bind-Value="_model.SendRules" />
                        </div>
                        <div class="d-flex">
                            <MIcon Size="24" Color="emphasis2" OnClick="()=> _tabIndex-- ">mdi-keyboard-backspace</MIcon>
                            <MSpacer></MSpacer>
                            <MButton Color="fill" Class="btn-form" OnClick="async() => await HandleOkAsync(true)">@T("Save")</MButton>
                            <MButton Color="primary" Class="btn-form" OnClick="async() => await HandleOkAsync(false)">@T("SaveSend")</MButton>
                        </div>
                    </div>
                </ElevationTabItem>
            </ElevationTab>
        </MForm>
    </McModal>
</div>