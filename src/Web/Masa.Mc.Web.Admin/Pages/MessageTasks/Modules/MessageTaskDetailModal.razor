@inherits AdminCompontentBase
<div @ref="Ref">
    <SheetDialog Value="@_visible" ValueChanged="HandleVisibleChanged" Title="@T("Permission.ViewMessageTask")">
        <div class="sheet-dialog full-height flex-column">
            <div class="mt-4 flex-height-auto overflow-y">
                <MRow>
                    <MCol Cols="4">
                        <div class="text-subtitle2 mb-4">@T("DisplayName.MessageTaskHistory")</div>
                        <MRow>
                            <MCol Cols="7">
                                <MMenu @bind-Value="_datePickersShow"
                                       CloseOnContentClick="false"
                                       Transition="scale-transition"
                                       OffsetY
                                       MinWidth="@("auto")">
                                    <ActivatorContent>
                                        <MTextField Value="DateRangeText"
                                                    Label="@T("DateRange")"
                                                    Readonly
                                                    Dense
                                                    Outlined
                                                    HideDetails="@("auto")"
                                                    PrependInnerIcon="mdi-calendar"
                                                    @attributes="context.Attrs"></MTextField>
                                    </ActivatorContent>
                                    <ChildContent>
                                        <MDatePicker @bind-Value="_dates"
                                                     Range
                                                     NoTitle
                                                     Scrollable>
                                            <MSpacer></MSpacer>
                                            <MButton Text
                                                     Color="primary"
                                                     OnClick="HandleDatePickersCancel">
                                                Cancel
                                            </MButton>
                                            <MButton Text
                                                     Color="primary"
                                                     OnClick="HandleDatePickersAsync">
                                                OK
                                            </MButton>
                                        </MDatePicker>
                                    </ChildContent>
                                </MMenu>
                            </MCol>
                            <MCol Cols="5">
                                <MSelect @bind-Value="@_queryParam.Status"
                                         Items="@(GetEnumList<MessageTaskHistoryStatuses>())"
                                         Label="@T("DisplayName.MessageTaskHistoryStatus")"
                                         ItemText="@(item => T($"DisplayName.MessageTaskHistoryStatus.{item.ToString()}"))"
                                         ItemValue="item => item"
                                         Dense
                                         Outlined
                                         Clearable
                                         HideDetails="@("auto")"
                                         TItem="MessageTaskHistoryStatuses"
                                         TItemValue="MessageTaskHistoryStatuses"
                                         TValue="MessageTaskHistoryStatuses?"
                                         OnClearClick="Refresh"
                                         OnSelectedItemUpdate="Refresh">
                                </MSelect>
                            </MCol>
                        </MRow>
                        <MSimpleTable Class="mt-2">
                            <tbody>
                                @foreach (var item in _historys.Result)
                                {
                                    <tr @key="item.Id" @onclick="()=>HandleItemSelect(item)" class="@(_historyInfo.Id==item.Id?"m-data-table__selected":string.Empty)">
                                        <td>
                                            <MChip Ripple="false">
                                                <span>@T($"DisplayName.MessageTaskHistoryStatus.{((MessageTaskHistoryStatuses)item.Status).ToString()}")</span>
                                            </MChip>
                                        </td>
                                        <td>
                                            <span class="text-body3">@T("DisplayName.MessageTaskSendTime"):@item.SendTime?.ToString(T("$DateTimeFormat"))</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </MSimpleTable>
                        <Pagination Class="mt-5" @bind-Page="_queryParam.Page" @bind-PageSize="_queryParam.PageSize" Total="_historys.Total" OnChange="HandlePaginationChange" />
                    </MCol>
                    <MCol Cols="8">
                        <MRow Class="mx-2 mt-2">
                            <div class="text-subtitle2">@T("DisplayName.MessageInfoContent")</div>
                            <MSpacer></MSpacer>
                            @if (_historyInfo.Status != MessageTaskHistoryStatuses.Withdrawn)
                            {
                                <MButton Rounded Outlined Color="indigo" Class="ml-6 medium-button px-6" OnClick="WithdrawnHistoryAsync">
                                    <span>@T("Withdraw")</span>
                                </MButton>
                            }
                        </MRow>
                        @if (_info.EntityType == MessageEntityTypes.Ordinary)
                        {
                            <OrdinaryMessageInfo MessageInfoId="_info.EntityId" MessageTask="_info"></OrdinaryMessageInfo>
                        }
                        @if (_info.EntityType == MessageEntityTypes.Template)
                        {
                            <TemplateMessageInfo MessageTemplateId="_info.EntityId" MessageTask="_info"></TemplateMessageInfo>
                            <MessageVariables Class="mt-4" @bind-Value="_historyInfo.Variables" ReadOnly></MessageVariables>
                        }
                        <div class="my-2 text-subtitle2">@T("DisplayName.MessageTaskReceiver")</div>
                        <MSelect @bind-Value="@_historyInfo.ReceiverType"
                                 Items="@(GetEnumList<ReceiverTypes>())"
                                 Label="@T("DisplayName.ReceiverType")"
                                 ItemText="@(item => T($"DisplayName.ReceiverType.{item.ToString()}"))"
                                 ItemValue="item => item"
                                 Dense
                                 Outlined
                                 Disabled
                                 HideDetails="@("auto")">
                        </MSelect>
                        <div class="my-2 text-subtitle2">@T("DisplayName.MessageTaskSendingRule")</div>

                        @if (!string.IsNullOrEmpty(_historyInfo.Sign))
                        {
                            <MRow Class="mt-4">
                                <MCol>
                                    <MTextField @bind-Value="_historyInfo.Sign"
                                            Label="@T("DisplayName.MessageTemplateSign")"
                                            Dense
                                            Outlined
                                            Disabled
                                            HideDetails="@("auto")">
                                    </MTextField>
                                </MCol>
                            </MRow>
                        }
                        <MessageSendingRules ReadOnly Class="mt-2" @bind-Value="_historyInfo.SendRules" @bind-SendTime="_historyInfo.SendTime" />
                    </MCol>
                </MRow>
            </div>
            <div Class="d-flex mt-6">
                <MSwitch Class="mt-1" Value="@_info.IsEnabled"
                         Inset
                         Label="@(_info.IsEnabled?T("Enable"):T("Disabled"))" ValueChanged="HandleIsEnabledChanged"></MSwitch>
                <MButton Class="mr-6" Text Color="error" OnClick="HandleDelAsync">@T("Delete")</MButton>
                <MSpacer></MSpacer>
            </div>
        </div>
    </SheetDialog>
</div>